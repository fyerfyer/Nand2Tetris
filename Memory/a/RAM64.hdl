// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //use address[0..2] to send 8 different outputs, which 
    //represent "load" of each RAM8
    DMux8Way(in = load, sel = address[0..2], a = R0, b = R1, c = R2, d = R3, e = R4, f = R5, g = R6, h = R7);
    
    RAM8(in = in, load = R0, address = address[3..5], out = out0);
    RAM8(in = in, load = R1, address = address[3..5], out = out1);
    RAM8(in = in, load = R2, address = address[3..5], out = out2);
    RAM8(in = in, load = R3, address = address[3..5], out = out3);
    RAM8(in = in, load = R4, address = address[3..5], out = out4);
    RAM8(in = in, load = R5, address = address[3..5], out = out5);
    RAM8(in = in, load = R6, address = address[3..5], out = out6);
    RAM8(in = in, load = R7, address = address[3..5], out = out7);

    //select the final output by the eight different outputs
    //why address[0..2]? because it acts as the "selector" of
    //these RAM8s
    Mux8Way16(a = out0, b = out1, c = out2, d = out3, e = out4, f = out5, g = out6, h = out7, sel = address[0..2], out = out);
}
